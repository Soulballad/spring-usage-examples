# 端口
server:
  port: 11055

# eureka
eureka:
  server:
    port: 11050
  instance:
    # 使用 ip 代替实例名
    prefer-ip-address: true
    # 实例的主机名
    hostname: localhost
    # 实例的 ID 规则
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
  client:
    serviceUrl:
      # 注册中心地址
      defaultZone: http://${eureka.instance.hostname}:${eureka.server.port}/eureka/






#spring:
#  profiles:
#    # 指定配置
#    # route_simple：简单尝试
#    # route_stripPrefix：截取请求
#    # route_uri：转发指定地址并传入参数
#    # route_addRequestParameter：转发指定服务并传入参数
#    # route_hystrix：熔断
#    # route_requestRateLimiter：限流
#    # route_all：综合
#    active: route_all


spring:
  ## 简单尝试
  application:
    # 应用名称
    name: ofc-gateway-router
  redis:
    host: 172.16.11.125
    port: 6379
    database: 0
  cloud:
    gateway:
      discovery:
        locator:
          # 是否和服务注册与发现组件结合，设置为 true 后可以直接使用应用名称调用服务
          enabled: true
      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
      routes:
        # 路由标识（id：标识，具有唯一性）   简单尝试
        - id: route_simple
          # 目标服务地址（uri：地址，请求转发后的地址）
          uri: http://localhost:11056/index
          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
          predicates:
            ## 转发地址格式为 uri/index
            - Path=/index
        - id: route_stripPrefix
          predicates:
            - Path=/test/access
          filters:
            - StripPrefix=1
          uri: http://localhost:11056/access
        - id: route_uri
          predicates:
            - Method=GET
          filters:
            - AddRequestParameter=name, lisi # 添加指定参数
          uri: http://localhost:11052
        - id: route_addRequestParameter
          predicates:
            - Method=GET
          filters:
            - AddRequestParameter=age, eighteen
          uri: lb://ofc-gateway-service
        - id: route_hystrix
          predicates:
            - Method=GET
          filters:
            - AddRequestParameter=age, eighteen
            - name: Hystrix
            - args:
                name: fallbackcmd
                ### fallback 时调用的方法 http://localhost:11055/fallback
                fallbackUri: forward:/fallback
          uri: lb://ofc-gateway-service
        - id: route_requestRateLimiter
            predicates:
              - Method=GET
            filters:
              - AddRequestParameter=age, eighteen
              ## 限流
              - name: RequestRateLimiter
                args:
                  ### 限流过滤器的 Bean 名称
                  key-resolver: '#{@uriKeyResolver}'
                  ### 每秒添加令牌数
                  redis-rate-limiter.replenishRate: 1
                  ### 令牌桶大小
                  redis-rate-limiter.burstCapacity: 3
            uri: lb://ofc-gateway-service

# actuator
management:
  endpoint:
    gateway:
      enabled=true:
  endpoints:
    web:
      exposure:
        include: gateway

# 日志
logging:
  level:
    # log 级别
    org.springframework.cloud.gateway: debug